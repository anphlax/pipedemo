# This workflow will build and push a new container image to Amazon ECR,
# and then will modify a deployment definition in order to spin up the image in AWS ECS, when there is a push to the "main" branch.

name: Deploy an Image AWS EKS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: MY_AWS_REGION                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: MY_ECR_REPOSITORY           # set this to your Amazon ECR repository name
  EKS_CLUSTER: MY_EKS_CLUSTER                 # set this to your Amazon EKS cluster name
  CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
  
permissions:
  contents: read

jobs:
  deploy:
    name: AWS Deployment
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Alter the deployment config and apply it in EKS...
      id: task-def
      run: |
        echo "# get kubeconfig for this context..."
        echo "kubectl config use-context ..."
        echo "# manage namespace"
        echo "kubectl create namespace $NAMESPACE_SLUG --dry-run=client -o yaml | kubectl apply -f -"
        echo "export DOCKER_IMAGE_TAG=$CI_COMMIT_SHORT_SHA"
        echo "# apply the deployment"
        echo "cat ./deployment/develop.yaml | envsubst | kubectl apply -f -"
